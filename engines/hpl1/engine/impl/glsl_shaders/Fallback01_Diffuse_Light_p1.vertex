// Copyright 2006-2010 (C) - Frictional Games
//
// This file is part of HPL1 Engine
//
// For conditions of distribution and use, see copyright notice in LICENSE-shaders
//

///////////////////////////////////////////////////////
/// DIFFUSE LIGHTING VERTEX PROGRAM //////////////////
///////////////////////////////////////////////////////

in vec4 position;
in vec3 normal;
in vec3 uv;
in vec4 tangent;

out vec4 vPos;
out vec4 vColor
out vec3 vLighDir;
out vec3 vUv;
out vec3 vLightPos;

uniform mat4 worldViewProj;
uniform vec3 LightPos;
uniform vec4 LightColor;
uniform vec3 LightDirMul;

void main()
{
	vPos = (worldViewProj * position);

	vUv = uv;

	vec3 lightDir = LightPos - position.xyz;
	vLighDir = lightDir * LightDirMul;
	vLightPos = vLighDir *0.5 + 0.5;

	//Calculate rotation for light to get it to tangent space.
	vec3 binormal = cross(normal,tangent.xyz)*tangent.w;
	mat3 rotation = mat3(tangent.xyz, binormal, normal);

	//Transform the lightdir
	vLighDir = (rotation * vLighDir);

    outColor = vec3(1.0);
}