// Copyright 2006-2010 (C) - Frictional Games
//
// This file is part of HPL1 Engine
//
// For conditions of distribution and use, see copyright notice in LICENSE-shaders
//

///////////////////////////////////////////////////////
/// DIFFUSE SPECULAR LIGHTING FRAGMENT PROGRAM ////////
///////////////////////////////////////////////////////

in vec4 vPos; //in projection space
in vec4 vLightColor;
in vec2 vUv;
in vec3 vLightDir;
in vec3 vHalfVec;

OUTPUT

uniform sampler2D diffuseMap = 0;
uniform samplerCube normalCubeMap = 2;
uniform sampler1D falloffMap = 3;

void main()
{
	float attenuation = texture1D(falloffMap, dot(vLightDir,vLightDir)).x;

	vLightDir = normalize(vLightDir);//(2*textureCube(normalCubeMap,vLightDir)-1).xyz;
	vHalfVec = normalize(vHalfVec);//(2*textureCube(normalCubeMap,vHalfVec)-1).xyz;

	float specular = clamp(dot(vHalfVec, vec3(0,0,1)), 0.0, 1.0);
	specular = pow(specular, 16.0) * vLightColor.w;

	outColor.xyz = specular + texture(diffuseMap, vUv).xyz * vLightColor.xyz * dot(normalize(vLightDir), vec3(0,0,1));
	outColor.xyz = outColor.xyz * attenuation;
}
