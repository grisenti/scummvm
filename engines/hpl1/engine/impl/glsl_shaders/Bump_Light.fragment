// Copyright 2006-2010 (C) - Frictional Games
//
// This file is part of HPL1 Engine
//
// For conditions of distribution and use, see copyright notice in LICENSE-shaders
//

///////////////////////////////////////////////////////
/// DIFFUSE LIGHTING FRAGMENT PROGRAM /////////////////
///////////////////////////////////////////////////////

in vec4 vPos; //in projection space
in vec4 vLightColor;
in vec2 vUv;
in vec3 vLightDir;

OUTPUT

uniform sampler2D diffuseMap = 0;
uniform sampler2D normalMap = 1;
uniform samplerCube normalCubeMap = 2;
uniform sampler1D  falloffMap = 3;

void main()
{
	float attenuation = texture1D(falloffMap,dot(vLightDir,vLightDir)).x;

	vec4 bumpVec = (2*texture(normalMap, vUv)-1);
	vec4 lightVec = (2.0*textureCube(normalCubeMap,vLightDir)-1.0);

	outColor.xyz = texture(diffuseMap, vUv).xyz * vLightColor.xyz * attenuation * dot(lightVec.xyz,bumpVec.xyz);
	outColor.w = 0;
}
