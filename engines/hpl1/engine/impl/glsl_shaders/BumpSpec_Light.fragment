// Copyright 2006-2010 (C) - Frictional Games
//
// This file is part of HPL1 Engine
//
// For conditions of distribution and use, see copyright notice in LICENSE-shaders
//

///////////////////////////////////////////////////////
/// BUMP SPECULAR LIGHTING FRAGMENT PROGRAM ///////////
///////////////////////////////////////////////////////

in vec4 vPos; //in projection space
in vec4 vLightColor;
in vec2 vUv;
in vec3 vLightDir;
in vec3 vHalfVec;

OUTPUT

uniform sampler2D diffuseMap = 0;
uniform sampler2D normalMap = 1;
uniform samplerCube normalCubeMap = 2;
uniform sampler1D  falloffMap = 3;

void main()
{
	float attenuation = texture1D(falloffMap,dot(vLightDir,vLightDir)).x;

	vec4 bumpVec = texture(normalMap, vUv);
	bumpVec.xyz = (2.0*bumpVec.xyz)-vec3(1.0);

	vLightDir = normalize(vLightDir);
	vHalfVec = normalize(vHalfVec);

	float specular = clamp(dot(vHalfVec, bumpVec.xyz), 0.0, 1.0);
	specular = pow(specular, 16.0) * vLightColor.w * clamp(bumpVec.w, 0.0, 1.0);

	outColor.xyz = texture(diffuseMap, vUv).xyz * vLightColor.xyz * dot(vLightDir, bumpVec.xyz) +
					specular;
	outColor.xyz *= attenuation;
}
