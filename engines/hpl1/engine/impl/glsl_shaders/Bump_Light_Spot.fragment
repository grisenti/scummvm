// Copyright 2006-2010 (C) - Frictional Games
//
// This file is part of HPL1 Engine
//
// For conditions of distribution and use, see copyright notice in
// LICENSE-shaders
//

///////////////////////////////////////////////////////
/// BUMP SPOTLIGHTING FRAGMENT PROGRAM /////////////
///////////////////////////////////////////////////////

in vec4 vPos; // in projection space
in vec4 vLightColor;
in vec2 vUv;
in vec3 vLightDir;
in vec3 vSpotlightUv;

OUTPUT

uniform sampler2D diffuseMap;
uniform sampler2D normalMap;
uniform samplerCube normalCubeMap;
uniform sampler1D falloffMap;
uniform sampler2D spotlightMap;
uniform sampler1D spotNegRejectMap;

void main() {
  vec3 diffuse = texture(diffuseMap, vUv).xyz;

  vec3 bumpVec = (2 * texture(normalMap, vUv) - 1).xyz;
  vec3 lightVec = (2.0 * textureCube(normalCubeMap, vLightDir) - 1.0).xyz;

  float attenuation = texture1D(falloffMap, dot(vLightDir, vLightDir)).x;
  vec3 spotColor =
      texture(spotlightMap, vSpotlightUv.xy / vSpotlightUv.z).xyz; // CHECK
  float rejectNeg = texture1D(spotNegRejectMap, vSpotlightUv.z + 0.5).x;
  outColor.xyz = diffuse * dot(lightVec, bumpVec) * attenuation *
                 vLightColor.xyz * spotColor * rejectNeg;
}
