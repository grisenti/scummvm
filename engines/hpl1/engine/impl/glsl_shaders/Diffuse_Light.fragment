// Copyright 2006-2010 (C) - Frictional Games
//
// This file is part of HPL1 Engine
//
// For conditions of distribution and use, see copyright notice in LICENSE-shaders
//

///////////////////////////////////////////////////////
/// DIFFUSE LIGHTING FRAGMENT PROGRAM /////////////////
///////////////////////////////////////////////////////

vec4 vPos; //in projection space
vec4 vLightColor;
vec2 vUv;
vec3 vLightDir;

OUTPUT

uniform sampler2D diffuseMap = 0;
uniform samplerCube normalCubeMap = 2;
uniform sampler1D  falloffMap = 3;

void main()
{
	float attenuation = texture1D(falloffMap,dot(vLightDir,vLightDir)).x;

	vLightDir = (2.0*textureCube(normalCubeMap,vLightDir)-vec3(1.0)).xyz;

	outColor.xyz = attenuation * texture(diffuseMap, vUv).xyz * vLightColor.xyz * dot(vLightDir, vec3(0,0,1));
	outColor.w = 0.0;
}
